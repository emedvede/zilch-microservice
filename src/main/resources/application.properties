#Change port
#server.port=8080
server.servlet.context-path=/zilch

# DataSource settings: set here your own configurations for the database
# connection.
spring.datasource.url = jdbc:postgresql://localhost:5432/zilch
spring.datasource.username = postgres
spring.datasource.password = postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true
spring.jpa.properties.hibernate.format_sql = true

# Hibernate ddl auto (none, create, create-drop, update)
spring.jpa.hibernate.ddl-auto = validate

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# schema name
spring.jpa.properties.hibernate.default_schema = schema_zilch

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect =  org.hibernate.dialect.PostgreSQL95Dialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.hibernate.max_fetch_depth =3
spring.jackson.serialization.fail-on-empty-beans=false
# spring.gson.serialize-nulls=false

#logging.level.org.springframework.cache=DEBUG

flyway.enabled=true

#Flyway
#spring.flyway.baseline-on-migrate=true
#spring.flyway.validate-on-migrate=true
#spring.flyway.user=postgres
#spring.flyway.password=postgres
spring.flyway.schemas=${spring.jpa.properties.hibernate.default_schema}
#spring.flyway.url=jdbc:postgresql://localhost:5432/zilch

#custom property
db.updated_by=zilch-microservice
application.transaction.type.credit=C
application.transaction.type.debit=D

